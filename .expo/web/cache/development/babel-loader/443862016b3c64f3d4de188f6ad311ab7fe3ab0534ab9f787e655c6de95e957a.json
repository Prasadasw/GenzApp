{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { SpinWheel } from \"../components/dice-game/SpinWheel\";\nimport { GameControls } from \"../components/dice-game/GameControls\";\nimport { ResultDisplay } from \"../components/dice-game/ResultDisplay\";\nimport { useSpinAnimation } from \"../hooks/useSpinAnimation\";\nimport { ACTIONS, BODY_PARTS } from \"../data/game-data\";\nimport { useRoute } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function DiceGameScreen() {\n  var route = useRoute();\n  var _ref = route.params || {},\n    _ref$player1Name = _ref.player1Name,\n    player1Name = _ref$player1Name === void 0 ? 'Player 1' : _ref$player1Name,\n    _ref$player2Name = _ref.player2Name,\n    player2Name = _ref$player2Name === void 0 ? 'Player 2' : _ref$player2Name;\n  var _useState = useState(player1Name),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentPlayer = _useState2[0],\n    setCurrentPlayer = _useState2[1];\n  var _useSpinAnimation = useSpinAnimation(),\n    actionAngle = _useSpinAnimation.spinAngle,\n    spinAction = _useSpinAnimation.spin;\n  var _useSpinAnimation2 = useSpinAnimation(),\n    bodyAngle = _useSpinAnimation2.spinAngle,\n    spinBody = _useSpinAnimation2.spin;\n  var handleSpin = function handleSpin() {\n    spinAction();\n    spinBody();\n    setCurrentPlayer(function (prev) {\n      return prev === player1Name ? player2Name : player1Name;\n    });\n  };\n  return _jsxs(LinearGradient, {\n    colors: ['#845EC2', '#D65DB1'],\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Dice to Spice\"\n    }), _jsxs(Text, {\n      style: styles.playerTurn,\n      children: [currentPlayer, \"'s Turn\"]\n    }), _jsxs(View, {\n      style: styles.wheelsContainer,\n      children: [_jsx(SpinWheel, {\n        title: \"Actions\",\n        angle: actionAngle,\n        items: ACTIONS\n      }), _jsx(SpinWheel, {\n        title: \"Body Parts\",\n        angle: bodyAngle,\n        items: BODY_PARTS\n      })]\n    }), _jsx(GameControls, {\n      onSpin: handleSpin\n    }), _jsx(ResultDisplay, {\n      actionAngle: actionAngle,\n      bodyAngle: bodyAngle\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 10\n  },\n  playerTurn: {\n    fontSize: 20,\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 30\n  },\n  wheelsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 40\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","LinearGradient","SpinWheel","GameControls","ResultDisplay","useSpinAnimation","ACTIONS","BODY_PARTS","useRoute","jsx","_jsx","jsxs","_jsxs","DiceGameScreen","route","_ref","params","_ref$player1Name","player1Name","_ref$player2Name","player2Name","_useState","_useState2","_slicedToArray","currentPlayer","setCurrentPlayer","_useSpinAnimation","actionAngle","spinAngle","spinAction","spin","_useSpinAnimation2","bodyAngle","spinBody","handleSpin","prev","colors","style","styles","container","children","title","playerTurn","wheelsContainer","angle","items","onSpin","create","flex","padding","fontSize","fontWeight","color","textAlign","marginBottom","flexDirection","justifyContent"],"sources":["C:/Users/Adarsh/Desktop/GenzApp/src/screens/DiceGameScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { SpinWheel } from '../components/dice-game/SpinWheel';\r\nimport { GameControls } from '../components/dice-game/GameControls';\r\nimport { ResultDisplay } from '../components/dice-game/ResultDisplay';\r\nimport { useSpinAnimation } from '../hooks/useSpinAnimation';\r\nimport { ACTIONS, BODY_PARTS } from '../data/game-data';\r\nimport { useRoute } from '@react-navigation/native';\r\n\r\nexport default function DiceGameScreen() {\r\n  const route = useRoute();\r\n  const { player1Name = 'Player 1', player2Name = 'Player 2' } = route.params || {};\r\n  const [currentPlayer, setCurrentPlayer] = useState(player1Name);\r\n  const { spinAngle: actionAngle, spin: spinAction } = useSpinAnimation();\r\n  const { spinAngle: bodyAngle, spin: spinBody } = useSpinAnimation();\r\n  \r\n  const handleSpin = () => {\r\n    spinAction();\r\n    spinBody();\r\n    setCurrentPlayer(prev => prev === player1Name ? player2Name : player1Name);\r\n  };\r\n\r\n  return (\r\n    <LinearGradient colors={['#845EC2', '#D65DB1']} style={styles.container}>\r\n      <Text style={styles.title}>Dice to Spice</Text>\r\n      <Text style={styles.playerTurn}>{currentPlayer}'s Turn</Text>\r\n      \r\n      <View style={styles.wheelsContainer}>\r\n        <SpinWheel\r\n          title=\"Actions\"\r\n          angle={actionAngle}\r\n          items={ACTIONS}\r\n        />\r\n        <SpinWheel\r\n          title=\"Body Parts\"\r\n          angle={bodyAngle}\r\n          items={BODY_PARTS}\r\n        />\r\n      </View>\r\n      \r\n      <GameControls onSpin={handleSpin} />\r\n      <ResultDisplay actionAngle={actionAngle} bodyAngle={bodyAngle} />\r\n    </LinearGradient>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  playerTurn: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    marginBottom: 30,\r\n  },\r\n  wheelsContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 40,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}