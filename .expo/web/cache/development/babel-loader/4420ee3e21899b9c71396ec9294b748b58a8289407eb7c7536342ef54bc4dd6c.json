{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Svg, { Path, G, Text as SvgText } from 'react-native-svg';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function SpinWheel(_ref) {\n  var title = _ref.title,\n    angle = _ref.angle,\n    items = _ref.items;\n  var rotateStyle = {\n    transform: [{\n      rotate: angle.interpolate({\n        inputRange: [0, 360],\n        outputRange: ['0deg', '360deg']\n      })\n    }]\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: title\n    }), _jsx(Animated.View, {\n      style: [styles.wheel, rotateStyle],\n      children: _jsx(Svg, {\n        height: \"200\",\n        width: \"200\",\n        viewBox: \"0 0 100 100\",\n        children: items.map(function (item, index) {\n          var angle = 360 / items.length * index;\n          return _jsxs(G, {\n            rotation: angle,\n            origin: \"50, 50\",\n            children: [_jsx(Path, {\n              d: \"M50 50 L50 0 A50 50 0 0 1 85 15 Z\",\n              fill: index % 2 ? '#FF6B6B' : '#4ECDC4'\n            }), _jsx(SvgText, {\n              x: \"65\",\n              y: \"25\",\n              fill: \"white\",\n              fontSize: \"8\",\n              textAnchor: \"middle\",\n              transform: `rotate(${-angle})`,\n              children: item\n            })]\n          }, index);\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 18,\n    color: 'white',\n    marginBottom: 10\n  },\n  wheel: {\n    width: 200,\n    height: 200\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","Animated","Svg","Path","G","SvgText","jsx","_jsx","jsxs","_jsxs","SpinWheel","_ref","title","angle","items","rotateStyle","transform","rotate","interpolate","inputRange","outputRange","style","styles","container","children","wheel","height","width","viewBox","map","item","index","length","rotation","origin","d","fill","x","y","fontSize","textAnchor","create","alignItems","color","marginBottom"],"sources":["C:/Users/Adarsh/Desktop/GenzApp/src/components/dice-game/SpinWheel.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, StyleSheet, Animated } from 'react-native';\r\nimport Svg, { Path, G, Text as SvgText } from 'react-native-svg';\r\n\r\ninterface SpinWheelProps {\r\n  title: string;\r\n  angle: Animated.Value;\r\n  items: string[];\r\n}\r\n\r\nexport function SpinWheel({ title, angle, items }: SpinWheelProps) {\r\n  const rotateStyle = {\r\n    transform: [{\r\n      rotate: angle.interpolate({\r\n        inputRange: [0, 360],\r\n        outputRange: ['0deg', '360deg'],\r\n      })\r\n    }]\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{title}</Text>\r\n      <Animated.View style={[styles.wheel, rotateStyle]}>\r\n        <Svg height=\"200\" width=\"200\" viewBox=\"0 0 100 100\">\r\n          {items.map((item, index) => {\r\n            const angle = (360 / items.length) * index;\r\n            return (\r\n              <G key={index} rotation={angle} origin=\"50, 50\">\r\n                <Path\r\n                  d=\"M50 50 L50 0 A50 50 0 0 1 85 15 Z\"\r\n                  fill={index % 2 ? '#FF6B6B' : '#4ECDC4'}\r\n                />\r\n                <SvgText\r\n                  x=\"65\"\r\n                  y=\"25\"\r\n                  fill=\"white\"\r\n                  fontSize=\"8\"\r\n                  textAnchor=\"middle\"\r\n                  transform={`rotate(${-angle})`}\r\n                >\r\n                  {item}\r\n                </SvgText>\r\n              </G>\r\n            );\r\n          })}\r\n        </Svg>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    color: 'white',\r\n    marginBottom: 10,\r\n  },\r\n  wheel: {\r\n    width: 200,\r\n    height: 200,\r\n  },\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,QAAA;AAE1B,OAAOC,GAAG,IAAIC,IAAI,EAAEC,CAAC,EAAEL,IAAI,IAAIM,OAAO,QAAQ,kBAAkB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAQjE,OAAO,SAASC,SAASA,CAAAC,IAAA,EAA0C;EAAA,IAAvCC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;EAC7C,IAAMC,WAAW,GAAG;IAClBC,SAAS,EAAE,CAAC;MACVC,MAAM,EAAEJ,KAAK,CAACK,WAAW,CAAC;QACxBC,UAAU,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC;QACpBC,WAAW,EAAE,CAAC,MAAM,EAAE,QAAQ;MAChC,CAAC;IACH,CAAC;EACH,CAAC;EAED,OACEX,KAAA,CAACX,IAAI;IAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BjB,IAAA,CAACR,IAAI;MAACsB,KAAK,EAAEC,MAAM,CAACV,KAAM;MAAAY,QAAA,EAAEZ;IAAK,CAAO,CAAC,EACzCL,IAAA,CAACN,QAAQ,CAACH,IAAI;MAACuB,KAAK,EAAE,CAACC,MAAM,CAACG,KAAK,EAAEV,WAAW,CAAE;MAAAS,QAAA,EAChDjB,IAAA,CAACL,GAAG;QAACwB,MAAM,EAAC,KAAK;QAACC,KAAK,EAAC,KAAK;QAACC,OAAO,EAAC,aAAa;QAAAJ,QAAA,EAChDV,KAAK,CAACe,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;UAC1B,IAAMlB,KAAK,GAAI,GAAG,GAAGC,KAAK,CAACkB,MAAM,GAAID,KAAK;UAC1C,OACEtB,KAAA,CAACL,CAAC;YAAa6B,QAAQ,EAAEpB,KAAM;YAACqB,MAAM,EAAC,QAAQ;YAAAV,QAAA,GAC7CjB,IAAA,CAACJ,IAAI;cACHgC,CAAC,EAAC,mCAAmC;cACrCC,IAAI,EAAEL,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG;YAAU,CACzC,CAAC,EACFxB,IAAA,CAACF,OAAO;cACNgC,CAAC,EAAC,IAAI;cACNC,CAAC,EAAC,IAAI;cACNF,IAAI,EAAC,OAAO;cACZG,QAAQ,EAAC,GAAG;cACZC,UAAU,EAAC,QAAQ;cACnBxB,SAAS,EAAE,UAAU,CAACH,KAAK,GAAI;cAAAW,QAAA,EAE9BM;YAAI,CACE,CAAC;UAAA,GAdJC,KAeL,CAAC;QAER,CAAC;MAAC,CACC;IAAC,CACO,CAAC;EAAA,CACZ,CAAC;AAEX;AAEA,IAAMT,MAAM,GAAGtB,UAAU,CAACyC,MAAM,CAAC;EAC/BlB,SAAS,EAAE;IACTmB,UAAU,EAAE;EACd,CAAC;EACD9B,KAAK,EAAE;IACL2B,QAAQ,EAAE,EAAE;IACZI,KAAK,EAAE,OAAO;IACdC,YAAY,EAAE;EAChB,CAAC;EACDnB,KAAK,EAAE;IACLE,KAAK,EAAE,GAAG;IACVD,MAAM,EAAE;EACV;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}