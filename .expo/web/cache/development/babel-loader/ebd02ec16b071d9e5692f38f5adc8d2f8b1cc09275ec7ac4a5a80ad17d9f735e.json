{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport GameScreen from \"./src/screens/GameScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { CustomTabBar } from \"./src/components/CustomTabBar\";\nimport GameSelectionScreen from \"./src/screens/GameSelectionScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(GestureHandlerRootView, {\n    style: {\n      flex: 1\n    },\n    children: _jsx(SafeAreaProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          tabBar: function tabBar(props) {\n            return _jsx(CustomTabBar, _objectSpread({}, props));\n          },\n          screenOptions: {\n            headerShown: false\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Gameselection\",\n            component: GameSelectionScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Home\",\n            component: GameScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Settings\",\n            component: SettingsScreen\n          })]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","SafeAreaProvider","GestureHandlerRootView","GameScreen","SettingsScreen","CustomTabBar","GameSelectionScreen","jsx","_jsx","jsxs","_jsxs","Tab","App","style","flex","children","Navigator","tabBar","props","_objectSpread","screenOptions","headerShown","Screen","name","component"],"sources":["C:/Users/Adarsh/Desktop/GenzApp/App.tsx"],"sourcesContent":["import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport GameScreen from './src/screens/GameScreen';\nimport SettingsScreen from './src/screens/SettingsScreen';\nimport { CustomTabBar } from './src/components/CustomTabBar';\nimport GameSelectionScreen from './src/screens/GameSelectionScreen';\nimport DiceGameScreen from './src/screens/DiceGameScreen';\n\nconst Tab = createBottomTabNavigator();\n\nexport default function App() {\n  return (\n    <GestureHandlerRootView style={{ flex: 1 }}>\n      <SafeAreaProvider>\n        <NavigationContainer>\n          <Tab.Navigator\n            tabBar={props => <CustomTabBar {...props} />}\n            screenOptions={{\n              headerShown: false,\n            }}\n          >\n            <Tab.Screen name='Gameselection' component={GameSelectionScreen} />\n            <Tab.Screen name=\"Home\" component={GameScreen} />\n            <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n            <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n          </Tab.Navigator>\n        </NavigationContainer>\n      </SafeAreaProvider>\n    </GestureHandlerRootView>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,sBAAsB,QAAQ,8BAA8B;AACrE,OAAOC,UAAU;AACjB,OAAOC,cAAc;AACrB,SAASC,YAAY;AACrB,OAAOC,mBAAmB;AAA0C,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAGpE,IAAMC,GAAG,GAAGX,wBAAwB,CAAC,CAAC;AAEtC,eAAe,SAASY,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACN,sBAAsB;IAACW,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EACzCP,IAAA,CAACP,gBAAgB;MAAAc,QAAA,EACfP,IAAA,CAACT,mBAAmB;QAAAgB,QAAA,EAClBL,KAAA,CAACC,GAAG,CAACK,SAAS;UACZC,MAAM,EAAE,SAARA,MAAMA,CAAEC,KAAK;YAAA,OAAIV,IAAA,CAACH,YAAY,EAAAc,aAAA,KAAKD,KAAK,CAAG,CAAC;UAAA,CAAC;UAC7CE,aAAa,EAAE;YACbC,WAAW,EAAE;UACf,CAAE;UAAAN,QAAA,GAEFP,IAAA,CAACG,GAAG,CAACW,MAAM;YAACC,IAAI,EAAC,eAAe;YAACC,SAAS,EAAElB;UAAoB,CAAE,CAAC,EACnEE,IAAA,CAACG,GAAG,CAACW,MAAM;YAACC,IAAI,EAAC,MAAM;YAACC,SAAS,EAAErB;UAAW,CAAE,CAAC,EACjDK,IAAA,CAACG,GAAG,CAACW,MAAM;YAACC,IAAI,EAAC,UAAU;YAACC,SAAS,EAAEpB;UAAe,CAAE,CAAC,EACzDI,IAAA,CAACG,GAAG,CAACW,MAAM;YAACC,IAAI,EAAC,UAAU;YAACC,SAAS,EAAEpB;UAAe,CAAE,CAAC;QAAA,CAC5C;MAAC,CACG;IAAC,CACN;EAAC,CACG,CAAC;AAE7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}