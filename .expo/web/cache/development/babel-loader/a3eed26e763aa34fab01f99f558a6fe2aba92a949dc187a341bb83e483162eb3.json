{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport { RevealPopup } from \"./RevealPopup\";\nimport { ScratchPattern } from \"./ScratchPattern\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ScratchCard(_ref) {\n  var image = _ref.image,\n    isSelected = _ref.isSelected;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    scratched = _useState2[0],\n    setScratched = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showPopup = _useState4[0],\n    setShowPopup = _useState4[1];\n  var scratchProgress = useRef(new Animated.Value(0)).current;\n  var scratchedAreas = useRef(new Set()).current;\n  var handleScratch = function handleScratch(event) {\n    if (!isSelected || scratched) return;\n    var _event$nativeEvent = event.nativeEvent,\n      x = _event$nativeEvent.x,\n      y = _event$nativeEvent.y;\n    var gridX = Math.floor(x / 20);\n    var gridY = Math.floor(y / 20);\n    var key = `${gridX}-${gridY}`;\n    if (!scratchedAreas.has(key)) {\n      scratchedAreas.add(key);\n      var progress = scratchedAreas.size / 100;\n      Animated.spring(scratchProgress, {\n        toValue: progress,\n        tension: 40,\n        friction: 5,\n        useNativeDriver: true\n      }).start();\n      if (progress >= 0.7 && !scratched) {\n        setScratched(true);\n        setShowPopup(true);\n      }\n    }\n  };\n  var handleClosePopup = function handleClosePopup() {\n    setShowPopup(false);\n    setScratched(false);\n    scratchedAreas.clear();\n    scratchProgress.setValue(0);\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(PanGestureHandler, {\n      onGestureEvent: handleScratch,\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(Image, {\n          source: image,\n          style: styles.image,\n          resizeMode: \"cover\"\n        }), !scratched && _jsxs(Animated.View, {\n          style: [styles.overlay, {\n            opacity: scratchProgress.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0]\n            })\n          }],\n          children: [_jsx(LinearGradient, {\n            colors: ['#D1D1D1', '#E5E5E5', '#D1D1D1'],\n            style: StyleSheet.absoluteFill\n          }), _jsx(ScratchPattern, {}), _jsx(Text, {\n            style: styles.scratchText,\n            children: isSelected ? 'Scratch here!' : 'Select me ðŸ’‹!'\n          })]\n        })]\n      })\n    }), _jsx(RevealPopup, {\n      visible: showPopup,\n      image: image,\n      onClose: handleClosePopup\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderRadius: 15,\n    overflow: 'hidden',\n    backgroundColor: 'white'\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute'\n  },\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  scratchText: {\n    color: '#666',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(255,255,255,0.6)',\n    textShadowOffset: {\n      width: 1,\n      height: 1\n    },\n    textShadowRadius: 2\n  }\n});","map":{"version":3,"names":["React","useState","useRef","View","Image","Text","StyleSheet","Animated","PanGestureHandler","RevealPopup","ScratchPattern","LinearGradient","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ScratchCard","_ref","image","isSelected","_useState","_useState2","_slicedToArray","scratched","setScratched","_useState3","_useState4","showPopup","setShowPopup","scratchProgress","Value","current","scratchedAreas","Set","handleScratch","event","_event$nativeEvent","nativeEvent","x","y","gridX","Math","floor","gridY","key","has","add","progress","size","spring","toValue","tension","friction","useNativeDriver","start","handleClosePopup","clear","setValue","children","onGestureEvent","style","styles","container","source","resizeMode","overlay","opacity","interpolate","inputRange","outputRange","colors","absoluteFill","scratchText","visible","onClose","create","flex","borderRadius","overflow","backgroundColor","width","height","position","_objectSpread","absoluteFillObject","justifyContent","alignItems","color","fontSize","fontWeight","textShadowColor","textShadowOffset","textShadowRadius"],"sources":["C:/Users/Adarsh/Downloads/project-bolt-sb1-7zb7qmnh/project/src/components/ScratchCard.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { View, Image, Text, StyleSheet, ImageSourcePropType, Animated } from 'react-native';\nimport { PanGestureHandler, PanGestureHandlerGestureEvent } from 'react-native-gesture-handler';\nimport { RevealPopup } from './RevealPopup';\nimport { ScratchPattern } from './ScratchPattern';\nimport { LinearGradient } from 'expo-linear-gradient';\n\ninterface ScratchCardProps {\n  image: ImageSourcePropType;\n  isSelected: boolean;\n}\n\nexport default function ScratchCard({ image, isSelected }: ScratchCardProps) {\n  const [scratched, setScratched] = useState(false);\n  const [showPopup, setShowPopup] = useState(false);\n  const scratchProgress = useRef(new Animated.Value(0)).current;\n  const scratchedAreas = useRef(new Set()).current;\n\n  const handleScratch = (event: PanGestureHandlerGestureEvent) => {\n    if (!isSelected || scratched) return;\n\n    const { x, y } = event.nativeEvent;\n    const gridX = Math.floor(x / 20);\n    const gridY = Math.floor(y / 20);\n    const key = `${gridX}-${gridY}`;\n\n    if (!scratchedAreas.has(key)) {\n      scratchedAreas.add(key);\n      const progress = scratchedAreas.size / 100; // Adjust denominator based on card size\n      \n      Animated.spring(scratchProgress, {\n        toValue: progress,\n        tension: 40,\n        friction: 5,\n        useNativeDriver: true,\n      }).start();\n\n      if (progress >= 0.7 && !scratched) {\n        setScratched(true);\n        setShowPopup(true);\n      }\n    }\n  };\n\n  const handleClosePopup = () => {\n    setShowPopup(false);\n    setScratched(false);\n    scratchedAreas.clear();\n    scratchProgress.setValue(0);\n  };\n\n  return (\n    <>\n      <PanGestureHandler onGestureEvent={handleScratch}>\n        <View style={styles.container}>\n          <Image \n            source={image}\n            style={styles.image}\n            resizeMode=\"cover\"\n          />\n          {!scratched && (\n            <Animated.View \n              style={[\n                styles.overlay,\n                {\n                  opacity: scratchProgress.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [1, 0],\n                  })\n                }\n              ]}\n            >\n              <LinearGradient\n                colors={['#D1D1D1', '#E5E5E5', '#D1D1D1']}\n                style={StyleSheet.absoluteFill}\n              />\n              <ScratchPattern />\n              <Text style={styles.scratchText}>\n                {isSelected ? 'Scratch here!' : 'Select me ðŸ’‹!'}\n              </Text>\n            </Animated.View>\n          )}\n        </View>\n      </PanGestureHandler>\n\n      <RevealPopup\n        visible={showPopup}\n        image={image}\n        onClose={handleClosePopup}\n      />\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderRadius: 15,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scratchText: {\n    color: '#666',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(255,255,255,0.6)',\n    textShadowOffset: { width: 1, height: 1 },\n    textShadowRadius: 2,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}