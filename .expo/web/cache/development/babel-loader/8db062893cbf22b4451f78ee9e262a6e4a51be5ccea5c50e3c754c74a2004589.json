{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ScratchCard from \"../components/ScratchCard\";\nimport { images } from \"../../utils/images\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GameScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedCard = _useState2[0],\n    setSelectedCard = _useState2[1];\n  var cards = [{\n    id: 1,\n    image: images.image1\n  }, {\n    id: 2,\n    image: images.image2\n  }, {\n    id: 3,\n    image: images.image3\n  }, {\n    id: 4,\n    image: images.image4\n  }, {\n    id: 5,\n    image: images.image5\n  }, {\n    id: 6,\n    image: images.image6\n  }];\n  return _jsxs(LinearGradient, {\n    colors: ['#FF6B6B', '#4ECDC4'],\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Adventure Cards\"\n    }), _jsx(Text, {\n      style: styles.subtitle,\n      children: \"Scratch to reveal your next adventure!\"\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.cardsContainer,\n      children: cards.map(function (card) {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return setSelectedCard(card.id);\n          },\n          style: [styles.cardWrapper, selectedCard === card.id && styles.selectedCard],\n          children: _jsx(ScratchCard, {\n            image: card.image,\n            isSelected: selectedCard === card.id\n          })\n        }, card.id);\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  subtitle: {\n    fontSize: 18,\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 20\n  },\n  cardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: 20,\n    gap: 15,\n    paddingBottom: 20\n  },\n  card: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: '#FFFFFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3\n  },\n  cardWrapper: {\n    width: '45%',\n    aspectRatio: 1,\n    borderRadius: 15,\n    overflow: 'hidden'\n  },\n  selectedCard: {\n    transform: [{\n      scale: 1.05\n    }],\n    elevation: 5\n  }\n});","map":{"version":3,"names":["React","useState","Text","StyleSheet","TouchableOpacity","ScrollView","LinearGradient","ScratchCard","images","jsx","_jsx","jsxs","_jsxs","GameScreen","_useState","_useState2","_slicedToArray","selectedCard","setSelectedCard","cards","id","image","image1","image2","image3","image4","image5","image6","colors","style","styles","container","children","title","subtitle","contentContainerStyle","cardsContainer","map","card","onPress","cardWrapper","isSelected","create","flex","padding","fontSize","fontWeight","color","textAlign","marginTop","marginBottom","flexDirection","flexWrap","justifyContent","gap","paddingBottom","width","height","borderRadius","backgroundColor","alignItems","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","aspectRatio","overflow","transform","scale"],"sources":["C:/Users/Adarsh/Desktop/GenzApp/src/screens/GameScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport ScratchCard from '../components/ScratchCard';\nimport { images } from '../../utils/images';\n\nexport default function GameScreen() {\n  const [selectedCard, setSelectedCard] = useState(null);\n\n  const cards = [\n    { id: 1, image: images.image1 },\n    { id: 2, image: images.image2 },\n    { id: 3, image: images.image3 },\n    { id: 4, image: images.image4 },\n    { id: 5, image: images.image5 },\n    { id: 6, image: images.image6 },\n  ];\n\n  return (\n    <LinearGradient\n      colors={['#FF6B6B', '#4ECDC4']}\n      style={styles.container}\n    >\n      <Text style={styles.title}>Adventure Cards</Text>\n      <Text style={styles.subtitle}>Scratch to reveal your next adventure!</Text>\n      \n      <ScrollView contentContainerStyle={styles.cardsContainer}>\n        {cards.map((card) => (\n          <TouchableOpacity\n            key={card.id}\n            onPress={() => setSelectedCard(card.id)}\n            style={[\n              styles.cardWrapper,\n              selectedCard === card.id && styles.selectedCard,\n            ]}\n          >\n            <ScratchCard\n              image={card.image}\n              isSelected={selectedCard === card.id}\n            />\n          </TouchableOpacity>\n        ))}\n      </ScrollView>\n     \n    </LinearGradient>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    textAlign: 'center',\n    marginTop: 20,\n  },\n  subtitle: {\n    fontSize: 18,\n    color: 'white',\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  cardsContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginTop: 20,\n    gap: 15,\n    paddingBottom: 20,\n    \n  },\n  card: {\n    width: 100, // Set width to make the card a square\n    height: 100, // Set height to make the card a square\n    borderRadius: 50, // Half of the width/height to make it round\n    backgroundColor: '#FFFFFF', // Optional: set a background color\n    justifyContent: 'center', // Center content horizontally\n    alignItems: 'center', // Center content vertically\n    shadowColor: '#000', // Optional: add shadow for a better look\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3, // For Android shadow\n  },\n  \n  cardWrapper: {\n    width: '45%',\n    aspectRatio: 1,\n    borderRadius: 15,\n    overflow: 'hidden',\n  },\n  selectedCard: {\n    transform: [{ scale: 1.05 }],\n    elevation: 5,\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}