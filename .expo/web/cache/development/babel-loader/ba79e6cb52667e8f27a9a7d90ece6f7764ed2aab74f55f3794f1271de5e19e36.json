{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Animated, { FadeInUp } from 'react-native-reanimated';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ActionButtons(_ref) {\n  var onComplete = _ref.onComplete,\n    onSkip = _ref.onSkip;\n  return _jsxs(Animated.View, {\n    entering: FadeInUp.delay(500),\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: [styles.button, styles.skipButton],\n      onPress: onSkip,\n      children: [_jsx(Ionicons, {\n        name: \"close-circle\",\n        size: 24,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Skip\"\n      })]\n    }), _jsxs(TouchableOpacity, {\n      style: [styles.button, styles.completeButton],\n      onPress: onComplete,\n      children: [_jsx(Ionicons, {\n        name: \"checkmark-circle\",\n        size: 24,\n        color: \"white\"\n      }), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Done\"\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 20,\n    gap: 20\n  },\n  button: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 25,\n    gap: 8\n  },\n  skipButton: {\n    backgroundColor: '#FF4B2B'\n  },\n  completeButton: {\n    backgroundColor: '#4CAF50'\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","TouchableOpacity","Text","StyleSheet","Ionicons","Animated","FadeInUp","jsx","_jsx","jsxs","_jsxs","ActionButtons","_ref","onComplete","onSkip","View","entering","delay","style","styles","container","children","button","skipButton","onPress","name","size","color","buttonText","completeButton","create","flexDirection","justifyContent","padding","gap","alignItems","paddingVertical","paddingHorizontal","borderRadius","backgroundColor","fontSize","fontWeight"],"sources":["C:/Users/Adarsh/Desktop/GenzApp/src/components/truth-or-dare/ActionButtons.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, TouchableOpacity, Text, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport Animated, { FadeInUp, SlideInRight } from 'react-native-reanimated';\r\n\r\ninterface ActionButtonsProps {\r\n  onComplete: () => void;\r\n  onSkip: () => void;\r\n}\r\n\r\nexport function ActionButtons({ onComplete, onSkip }: ActionButtonsProps) {\r\n  return (\r\n    <Animated.View \r\n      entering={FadeInUp.delay(500)}\r\n      style={styles.container}\r\n    >\r\n      <TouchableOpacity \r\n        style={[styles.button, styles.skipButton]}\r\n        onPress={onSkip}\r\n      >\r\n        <Ionicons name=\"close-circle\" size={24} color=\"white\" />\r\n        <Text style={styles.buttonText}>Skip</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity \r\n        style={[styles.button, styles.completeButton]}\r\n        onPress={onComplete}\r\n      >\r\n        <Ionicons name=\"checkmark-circle\" size={24} color=\"white\" />\r\n        <Text style={styles.buttonText}>Done</Text>\r\n      </TouchableOpacity>\r\n    </Animated.View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    padding: 20,\r\n    gap: 20,\r\n  },\r\n  button: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingVertical: 12,\r\n    paddingHorizontal: 30,\r\n    borderRadius: 25,\r\n    gap: 8,\r\n  },\r\n  skipButton: {\r\n    backgroundColor: '#FF4B2B',\r\n  },\r\n  completeButton: {\r\n    backgroundColor: '#4CAF50',\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,QAAQ,IAAIC,QAAQ,QAAsB,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAO3E,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAA6C;EAAA,IAA1CC,UAAU,GAAAD,IAAA,CAAVC,UAAU;IAAEC,MAAM,GAAAF,IAAA,CAANE,MAAM;EAChD,OACEJ,KAAA,CAACL,QAAQ,CAACU,IAAI;IACZC,QAAQ,EAAEV,QAAQ,CAACW,KAAK,CAAC,GAAG,CAAE;IAC9BC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAExBX,KAAA,CAACT,gBAAgB;MACfiB,KAAK,EAAE,CAACC,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACI,UAAU,CAAE;MAC1CC,OAAO,EAAEV,MAAO;MAAAO,QAAA,GAEhBb,IAAA,CAACJ,QAAQ;QAACqB,IAAI,EAAC,cAAc;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE,CAAC,EACxDnB,IAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACS,UAAW;QAAAP,QAAA,EAAC;MAAI,CAAM,CAAC;IAAA,CAC3B,CAAC,EAEnBX,KAAA,CAACT,gBAAgB;MACfiB,KAAK,EAAE,CAACC,MAAM,CAACG,MAAM,EAAEH,MAAM,CAACU,cAAc,CAAE;MAC9CL,OAAO,EAAEX,UAAW;MAAAQ,QAAA,GAEpBb,IAAA,CAACJ,QAAQ;QAACqB,IAAI,EAAC,kBAAkB;QAACC,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAO,CAAE,CAAC,EAC5DnB,IAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACS,UAAW;QAAAP,QAAA,EAAC;MAAI,CAAM,CAAC;IAAA,CAC3B,CAAC;EAAA,CACN,CAAC;AAEpB;AAEA,IAAMF,MAAM,GAAGhB,UAAU,CAAC2B,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,cAAc;IAC9BC,OAAO,EAAE,EAAE;IACXC,GAAG,EAAE;EACP,CAAC;EACDZ,MAAM,EAAE;IACNS,aAAa,EAAE,KAAK;IACpBI,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,EAAE;IACrBC,YAAY,EAAE,EAAE;IAChBJ,GAAG,EAAE;EACP,CAAC;EACDX,UAAU,EAAE;IACVgB,eAAe,EAAE;EACnB,CAAC;EACDV,cAAc,EAAE;IACdU,eAAe,EAAE;EACnB,CAAC;EACDX,UAAU,EAAE;IACVD,KAAK,EAAE,OAAO;IACda,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}