{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GenderScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedGender = _useState2[0],\n    setSelectedGender = _useState2[1];\n  var genderOptions = [{\n    id: 'male',\n    label: 'Male'\n  }, {\n    id: 'female',\n    label: 'Female'\n  }, {\n    id: 'other',\n    label: 'Other'\n  }];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Choose Your Gender\"\n    }), _jsx(View, {\n      style: styles.optionsContainer,\n      children: genderOptions.map(function (option) {\n        return _jsx(TouchableOpacity, {\n          style: [styles.option, selectedGender === option.id && styles.selectedOption],\n          onPress: function onPress() {\n            return setSelectedGender(option.id);\n          },\n          children: _jsx(Text, {\n            style: [styles.optionText, selectedGender === option.id && styles.selectedOptionText],\n            children: option.label\n          })\n        }, option.id);\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.continueButton, !selectedGender && styles.disabledButton],\n      disabled: !selectedGender,\n      onPress: function onPress() {\n        return navigation.navigate('Game');\n      },\n      children: _jsx(Text, {\n        style: styles.continueButtonText,\n        children: \"Continue\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 40,\n    color: '#333'\n  },\n  optionsContainer: {\n    gap: 15\n  },\n  option: {\n    padding: 20,\n    borderRadius: 15,\n    backgroundColor: '#f0f0f0',\n    alignItems: 'center'\n  },\n  selectedOption: {\n    backgroundColor: '#FF6B6B'\n  },\n  optionText: {\n    fontSize: 18,\n    color: '#333'\n  },\n  selectedOptionText: {\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  continueButton: {\n    backgroundColor: '#4ECDC4',\n    padding: 15,\n    borderRadius: 25,\n    marginTop: 40,\n    alignItems: 'center'\n  },\n  disabledButton: {\n    opacity: 0.5\n  },\n  continueButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","TouchableOpacity","useNavigation","jsx","_jsx","jsxs","_jsxs","GenderScreen","navigation","_useState","_useState2","_slicedToArray","selectedGender","setSelectedGender","genderOptions","id","label","style","styles","container","children","title","optionsContainer","map","option","selectedOption","onPress","optionText","selectedOptionText","continueButton","disabledButton","disabled","navigate","continueButtonText","create","flex","backgroundColor","padding","justifyContent","fontSize","fontWeight","textAlign","marginBottom","color","gap","borderRadius","alignItems","marginTop","opacity"],"sources":["C:/Users/Adarsh/Downloads/project-bolt-sb1-7zb7qmnh/project/src/screens/GenderScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, Animated } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nexport default function GenderScreen() {\n  const navigation = useNavigation();\n  const [selectedGender, setSelectedGender] = useState(null);\n\n  const genderOptions = [\n    { id: 'male', label: 'Male' },\n    { id: 'female', label: 'Female' },\n    { id: 'other', label: 'Other' },\n  ];\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Choose Your Gender</Text>\n      <View style={styles.optionsContainer}>\n        {genderOptions.map((option) => (\n          <TouchableOpacity\n            key={option.id}\n            style={[\n              styles.option,\n              selectedGender === option.id && styles.selectedOption,\n            ]}\n            onPress={() => setSelectedGender(option.id)}\n          >\n            <Text\n              style={[\n                styles.optionText,\n                selectedGender === option.id && styles.selectedOptionText,\n              ]}\n            >\n              {option.label}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n      <TouchableOpacity\n        style={[\n          styles.continueButton,\n          !selectedGender && styles.disabledButton,\n        ]}\n        disabled={!selectedGender}\n        onPress={() => navigation.navigate('Game')}\n      >\n        <Text style={styles.continueButtonText}>Continue</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20,\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 40,\n    color: '#333',\n  },\n  optionsContainer: {\n    gap: 15,\n  },\n  option: {\n    padding: 20,\n    borderRadius: 15,\n    backgroundColor: '#f0f0f0',\n    alignItems: 'center',\n  },\n  selectedOption: {\n    backgroundColor: '#FF6B6B',\n  },\n  optionText: {\n    fontSize: 18,\n    color: '#333',\n  },\n  selectedOptionText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n  continueButton: {\n    backgroundColor: '#4ECDC4',\n    padding: 15,\n    borderRadius: 25,\n    marginTop: 40,\n    alignItems: 'center',\n  },\n  disabledButton: {\n    opacity: 0.5,\n  },\n  continueButtonText: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}