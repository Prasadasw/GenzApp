{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ScratchCard(_ref) {\n  var image = _ref.image,\n    isSelected = _ref.isSelected;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    scratched = _useState2[0],\n    setScratched = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scratchProgress = _useState4[0],\n    setScratchProgress = _useState4[1];\n  var handleScratch = function handleScratch() {\n    if (isSelected) {\n      setScratchProgress(function (prev) {\n        return Math.min(prev + 0.1, 1);\n      });\n      if (scratchProgress >= 0.7) {\n        setScratched(true);\n      }\n    }\n  };\n  return _jsx(PanGestureHandler, {\n    onGestureEvent: handleScratch,\n    children: _jsx(View, {\n      style: styles.container,\n      children: scratched ? _jsx(Image, {\n        source: image,\n        style: styles.image,\n        resizeMode: \"cover\"\n      }) : _jsx(View, {\n        style: [styles.overlay, {\n          opacity: 1 - scratchProgress\n        }],\n        children: _jsx(Text, {\n          style: styles.scratchText,\n          children: isSelected ? 'Scratch here!' : 'Select me!'\n        })\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderRadius: 15,\n    overflow: 'hidden',\n    backgroundColor: 'white'\n  },\n  image: {\n    width: '100%',\n    height: '100%'\n  },\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: '#4ECDC4',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }),\n  scratchText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","Image","Text","StyleSheet","PanGestureHandler","jsx","_jsx","ScratchCard","_ref","image","isSelected","_useState","_useState2","_slicedToArray","scratched","setScratched","_useState3","_useState4","scratchProgress","setScratchProgress","handleScratch","prev","Math","min","onGestureEvent","children","style","styles","container","source","resizeMode","overlay","opacity","scratchText","create","flex","borderRadius","overflow","backgroundColor","width","height","_objectSpread","absoluteFillObject","justifyContent","alignItems","color","fontSize","fontWeight"],"sources":["C:/Users/Adarsh/Downloads/project-bolt-sb1-7zb7qmnh/project/src/components/ScratchCard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Image, Text, StyleSheet, Animated, ImageSourcePropType } from 'react-native';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\n\ninterface ScratchCardProps {\n  image: ImageSourcePropType;\n  isSelected: boolean;\n}\n\nexport default function ScratchCard({ image, isSelected }: ScratchCardProps) {\n  const [scratched, setScratched] = useState(false);\n  const [scratchProgress, setScratchProgress] = useState(0);\n\n  const handleScratch = () => {\n    if (isSelected) {\n      setScratchProgress((prev) => Math.min(prev + 0.1, 1));\n      if (scratchProgress >= 0.7) {\n        setScratched(true);\n      }\n    }\n  };\n\n  return (\n    <PanGestureHandler onGestureEvent={handleScratch}>\n      <View style={styles.container}>\n        {scratched ? (\n          <Image \n            source={image}\n            style={styles.image}\n            resizeMode=\"cover\"\n          />\n        ) : (\n          <View style={[styles.overlay, { opacity: 1 - scratchProgress }]}>\n            <Text style={styles.scratchText}>\n              {isSelected ? 'Scratch here!' : 'Select me!'}\n            </Text>\n          </View>\n        )}\n      </View>\n    </PanGestureHandler>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    borderRadius: 15,\n    overflow: 'hidden',\n    backgroundColor: 'white',\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: '#4ECDC4',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scratchText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAExC,SAASC,iBAAiB,QAAQ,8BAA8B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAOjE,eAAe,SAASC,WAAWA,CAAAC,IAAA,EAA0C;EAAA,IAAvCC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,UAAU,GAAAF,IAAA,CAAVE,UAAU;EACrD,IAAAC,SAAA,GAAkCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAA8CjB,QAAQ,CAAC,CAAC,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAlDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAE1C,IAAMG,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;IAC1B,IAAIV,UAAU,EAAE;MACdS,kBAAkB,CAAC,UAACE,IAAI;QAAA,OAAKC,IAAI,CAACC,GAAG,CAACF,IAAI,GAAG,GAAG,EAAE,CAAC,CAAC;MAAA,EAAC;MACrD,IAAIH,eAAe,IAAI,GAAG,EAAE;QAC1BH,YAAY,CAAC,IAAI,CAAC;MACpB;IACF;EACF,CAAC;EAED,OACET,IAAA,CAACF,iBAAiB;IAACoB,cAAc,EAAEJ,aAAc;IAAAK,QAAA,EAC/CnB,IAAA,CAACN,IAAI;MAAC0B,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,EAC3BX,SAAS,GACRR,IAAA,CAACL,KAAK;QACJ4B,MAAM,EAAEpB,KAAM;QACdiB,KAAK,EAAEC,MAAM,CAAClB,KAAM;QACpBqB,UAAU,EAAC;MAAO,CACnB,CAAC,GAEFxB,IAAA,CAACN,IAAI;QAAC0B,KAAK,EAAE,CAACC,MAAM,CAACI,OAAO,EAAE;UAAEC,OAAO,EAAE,CAAC,GAAGd;QAAgB,CAAC,CAAE;QAAAO,QAAA,EAC9DnB,IAAA,CAACJ,IAAI;UAACwB,KAAK,EAAEC,MAAM,CAACM,WAAY;UAAAR,QAAA,EAC7Bf,UAAU,GAAG,eAAe,GAAG;QAAY,CACxC;MAAC,CACH;IACP,CACG;EAAC,CACU,CAAC;AAExB;AAEA,IAAMiB,MAAM,GAAGxB,UAAU,CAAC+B,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,IAAI,EAAE,CAAC;IACPC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,QAAQ;IAClBC,eAAe,EAAE;EACnB,CAAC;EACD7B,KAAK,EAAE;IACL8B,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDT,OAAO,EAAAU,aAAA,CAAAA,aAAA,KACFtC,UAAU,CAACuC,kBAAkB;IAChCJ,eAAe,EAAE,SAAS;IAC1BK,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EAAQ,EACrB;EACDX,WAAW,EAAE;IACXY,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}