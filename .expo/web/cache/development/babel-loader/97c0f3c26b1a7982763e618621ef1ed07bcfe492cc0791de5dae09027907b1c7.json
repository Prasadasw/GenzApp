{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { GameCard } from \"../../components/truth-or-dare/GameCard\";\nimport { PlayerTurn } from \"../../components/truth-or-dare/PlayerTurn\";\nimport { ActionButtons } from \"../../components/truth-or-dare/ActionButtons\";\nimport { useRoute } from '@react-navigation/native';\nimport { useTruthOrDare } from \"../../hooks/useTruthOrDare\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function TruthGameScreen() {\n  var route = useRoute();\n  var players = route.params.players;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentPlayerIndex = _useState2[0],\n    setCurrentPlayerIndex = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedType = _useState4[0],\n    setSelectedType = _useState4[1];\n  var _useTruthOrDare = useTruthOrDare(),\n    currentChallenge = _useTruthOrDare.currentChallenge,\n    generateChallenge = _useTruthOrDare.generateChallenge,\n    completeChallenge = _useTruthOrDare.completeChallenge,\n    skipChallenge = _useTruthOrDare.skipChallenge;\n  var handleTypeSelect = function handleTypeSelect(type) {\n    setSelectedType(type);\n    generateChallenge(type);\n  };\n  var handleNext = function handleNext(completed) {\n    if (completed) {\n      completeChallenge();\n    } else {\n      skipChallenge();\n    }\n    setSelectedType(null);\n    setCurrentPlayerIndex(function (prev) {\n      return (prev + 1) % players.length;\n    });\n  };\n  return _jsxs(LinearGradient, {\n    colors: ['#FF6B6B', '#4ECDC4'],\n    style: styles.container,\n    children: [_jsx(PlayerTurn, {\n      playerName: players[currentPlayerIndex].name,\n      totalPlayers: players.length,\n      currentPlayer: currentPlayerIndex + 1\n    }), !selectedType ? _jsxs(View, {\n      style: styles.cardContainer,\n      children: [_jsx(GameCard, {\n        type: \"truth\",\n        onSelect: function onSelect() {\n          return handleTypeSelect('truth');\n        }\n      }), _jsx(GameCard, {\n        type: \"dare\",\n        onSelect: function onSelect() {\n          return handleTypeSelect('dare');\n        }\n      })]\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(View, {\n        style: styles.challengeContainer,\n        children: currentChallenge && _jsx(ChallengeCard, {\n          type: selectedType,\n          challenge: currentChallenge\n        })\n      }), _jsx(ActionButtons, {\n        onComplete: function onComplete() {\n          return handleNext(true);\n        },\n        onSkip: function onSkip() {\n          return handleNext(false);\n        }\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20\n  },\n  cardContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    gap: 20\n  },\n  challengeContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","LinearGradient","GameCard","PlayerTurn","ActionButtons","useRoute","useTruthOrDare","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TruthGameScreen","route","players","params","_useState","_useState2","_slicedToArray","currentPlayerIndex","setCurrentPlayerIndex","_useState3","_useState4","selectedType","setSelectedType","_useTruthOrDare","currentChallenge","generateChallenge","completeChallenge","skipChallenge","handleTypeSelect","type","handleNext","completed","prev","length","colors","style","styles","container","children","playerName","name","totalPlayers","currentPlayer","cardContainer","onSelect","challengeContainer","ChallengeCard","challenge","onComplete","onSkip","create","flex","padding","flexDirection","justifyContent","alignItems","gap"],"sources":["C:/Users/Adarsh/Desktop/GenzApp/src/screens/TruthOrDare/TruthGameScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { GameCard } from '../../components/truth-or-dare/GameCard';\r\nimport { PlayerTurn } from '../../components/truth-or-dare/PlayerTurn';\r\nimport { ActionButtons } from '../../components/truth-or-dare/ActionButtons';\r\nimport { useRoute } from '@react-navigation/native';\r\nimport { useTruthOrDare } from '../../hooks/useTruthOrDare';\r\n\r\nexport default function TruthGameScreen() {\r\n  const route = useRoute();\r\n  const { players } = route.params;\r\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\r\n  const [selectedType, setSelectedType] = useState<'truth' | 'dare' | null>(null);\r\n  \r\n  const { \r\n    currentChallenge,\r\n    generateChallenge,\r\n    completeChallenge,\r\n    skipChallenge \r\n  } = useTruthOrDare();\r\n\r\n  const handleTypeSelect = (type: 'truth' | 'dare') => {\r\n    setSelectedType(type);\r\n    generateChallenge(type);\r\n  };\r\n\r\n  const handleNext = (completed: boolean) => {\r\n    if (completed) {\r\n      completeChallenge();\r\n    } else {\r\n      skipChallenge();\r\n    }\r\n    \r\n    setSelectedType(null);\r\n    setCurrentPlayerIndex((prev) => (prev + 1) % players.length);\r\n  };\r\n\r\n  return (\r\n    <LinearGradient colors={['#FF6B6B', '#4ECDC4']} style={styles.container}>\r\n      <PlayerTurn \r\n        playerName={players[currentPlayerIndex].name}\r\n        totalPlayers={players.length}\r\n        currentPlayer={currentPlayerIndex + 1}\r\n      />\r\n\r\n      {!selectedType ? (\r\n        <View style={styles.cardContainer}>\r\n          <GameCard\r\n            type=\"truth\"\r\n            onSelect={() => handleTypeSelect('truth')}\r\n          />\r\n          <GameCard\r\n            type=\"dare\"\r\n            onSelect={() => handleTypeSelect('dare')}\r\n          />\r\n        </View>\r\n      ) : (\r\n        <>\r\n          <View style={styles.challengeContainer}>\r\n            {currentChallenge && (\r\n              <ChallengeCard\r\n                type={selectedType}\r\n                challenge={currentChallenge}\r\n              />\r\n            )}\r\n          </View>\r\n          <ActionButtons\r\n            onComplete={() => handleNext(true)}\r\n            onSkip={() => handleNext(false)}\r\n          />\r\n        </>\r\n      )}\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  cardContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    gap: 20,\r\n  },\r\n  challengeContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}