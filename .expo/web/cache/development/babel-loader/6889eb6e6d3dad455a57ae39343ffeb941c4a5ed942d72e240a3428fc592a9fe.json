{"ast":null,"code":"import React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { GameCard } from \"../components/GameCard\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GameSelectionScreen() {\n  var navigation = useNavigation();\n  var games = [{\n    id: 'scratch',\n    title: 'Sex Scratch Adventure',\n    description: 'Recreate sex positions, complete indoor and outdoor locations, try d*rty extras and get rewarded for each completed challenge.',\n    icon: 'heart',\n    colors: ['#FF6B6B', '#4ECDC4'],\n    disabled: enable\n  }, {\n    id: 'dice',\n    title: 'Dice to Spice',\n    description: 'Each player takes turns spinning the wheels, one determining an action and the other specifying a body part.',\n    icon: 'dice',\n    colors: ['#845EC2', '#D65DB1'],\n    disabled: true\n  }, {\n    id: 'distance',\n    title: 'Long Distance Game',\n    description: 'Send affectionate, cute, or even naughty notifications to your partners device, instantly capturing their attention.',\n    icon: 'heart-half',\n    colors: ['#FF9671', '#FFC75F'],\n    disabled: true\n  }];\n  return _jsx(LinearGradient, {\n    colors: ['#1A1A1A', '#2D2D2D'],\n    style: styles.container,\n    children: _jsxs(ScrollView, {\n      style: styles.scrollView,\n      contentContainerStyle: styles.content,\n      children: [_jsx(Text, {\n        style: styles.header,\n        children: \"Choose Your Game\"\n      }), _jsx(Text, {\n        style: styles.subheader,\n        children: \"Select an exciting adventure to begin\"\n      }), games.map(function (game) {\n        return _jsx(GameCard, {\n          title: game.title,\n          description: game.description,\n          icon: game.icon,\n          colors: game.colors,\n          disabled: game.disabled,\n          onPress: function onPress() {\n            if (game.id === 'scratch') {\n              navigation.navigate('GameSelection');\n            }\n          }\n        }, game.id);\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  scrollView: {\n    flex: 1\n  },\n  content: {\n    padding: 20\n  },\n  header: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: 'white',\n    marginBottom: 8,\n    textAlign: 'center'\n  },\n  subheader: {\n    fontSize: 16,\n    color: 'rgba(255, 255, 255, 0.7)',\n    marginBottom: 30,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","ScrollView","StyleSheet","Text","LinearGradient","GameCard","useNavigation","jsx","_jsx","jsxs","_jsxs","GameSelectionScreen","navigation","games","id","title","description","icon","colors","disabled","enable","style","styles","container","children","scrollView","contentContainerStyle","content","header","subheader","map","game","onPress","navigate","create","flex","padding","fontSize","fontWeight","color","marginBottom","textAlign"],"sources":["C:/Users/Adarsh/Downloads/project-bolt-sb1-7zb7qmnh/project/src/screens/GameSelectionScreen.tsx"],"sourcesContent":["import React from 'react';\r\nimport { View, ScrollView, StyleSheet, Text } from 'react-native';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { GameCard } from '../components/GameCard';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nexport default function GameSelectionScreen() {\r\n  const navigation = useNavigation();\r\n\r\n  const games = [\r\n    {\r\n      id: 'scratch',\r\n      title: 'Sex Scratch Adventure',\r\n      description: 'Recreate sex positions, complete indoor and outdoor locations, try d*rty extras and get rewarded for each completed challenge.',\r\n      icon: 'heart',\r\n      colors: ['#FF6B6B', '#4ECDC4'],\r\n      disabled: enable,\r\n    },\r\n    {\r\n      id: 'dice',\r\n      title: 'Dice to Spice',\r\n      description: 'Each player takes turns spinning the wheels, one determining an action and the other specifying a body part.',\r\n      icon: 'dice',\r\n      colors: ['#845EC2', '#D65DB1'],\r\n      disabled: true,\r\n    },\r\n    {\r\n      id: 'distance',\r\n      title: 'Long Distance Game',\r\n      description: 'Send affectionate, cute, or even naughty notifications to your partners device, instantly capturing their attention.',\r\n      icon: 'heart-half',\r\n      colors: ['#FF9671', '#FFC75F'],\r\n      disabled: true,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <LinearGradient\r\n      colors={['#1A1A1A', '#2D2D2D']}\r\n      style={styles.container}\r\n    >\r\n      <ScrollView \r\n        style={styles.scrollView}\r\n        contentContainerStyle={styles.content}\r\n      >\r\n        <Text style={styles.header}>Choose Your Game</Text>\r\n        <Text style={styles.subheader}>Select an exciting adventure to begin</Text>\r\n        \r\n        {games.map((game) => (\r\n          <GameCard\r\n            key={game.id}\r\n            title={game.title}\r\n            description={game.description}\r\n            icon={game.icon}\r\n            colors={game.colors}\r\n            disabled={game.disabled}\r\n            onPress={() => {\r\n              if (game.id === 'scratch') {\r\n                navigation.navigate('GameSelection');\r\n              }\r\n            }}\r\n          />\r\n        ))}\r\n      </ScrollView>\r\n    </LinearGradient>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    padding: 20,\r\n  },\r\n  header: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    marginBottom: 8,\r\n    textAlign: 'center',\r\n  },\r\n  subheader: {\r\n    fontSize: 16,\r\n    color: 'rgba(255, 255, 255, 0.7)',\r\n    marginBottom: 30,\r\n    textAlign: 'center',\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}